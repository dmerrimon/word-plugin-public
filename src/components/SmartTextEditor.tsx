/**
 * Smart Text Editor with Real-time Examples and Suggestions
 * Focuses on helping users improve their existing text
 */

import * as React from 'react';

interface SmartTextEditorProps {
  value: string;
  onChange: (value: string) => void;
  placeholder?: string;
}

export const SmartTextEditor: React.FC<SmartTextEditorProps> = ({
  value,
  onChange,
  placeholder = "Enter or paste your protocol text..."
}) => {
  const [showSuggestions, setShowSuggestions] = React.useState(false);
  const [cursorPosition, setCursorPosition] = React.useState(0);
  
  // Real examples from our 48,912+ protocol dataset
  const quickExamples = {
    eligibility: [
      "Participants must be ‚â• 18 years of age",
      "ECOG performance status ‚â§ 2", 
      "Adequate organ and bone marrow function",
      "Life expectancy ‚â• 12 weeks",
      "Ability to understand and sign informed consent"
    ],
    safety: [
      "Pregnant or nursing women",
      "Active infection requiring systemic therapy",
      "Known hypersensitivity to study drug",
      "Uncontrolled intercurrent illness",
      "Psychiatric illness limiting compliance"
    ],
    endpoints: [
      "Overall survival (OS)",
      "Progression-free survival (PFS) per RECIST v1.1",
      "Objective response rate (ORR)", 
      "Safety and tolerability per CTCAE v5.0",
      "Quality of life assessments"
    ]
  };

  // Context-aware suggestions based on what user is typing
  const getSmartSuggestions = (text: string): string[] => {
    const lowerText = text.toLowerCase();
    
    if (lowerText.includes('inclusion') || lowerText.includes('eligible')) {
      return quickExamples.eligibility;
    }
    if (lowerText.includes('exclusion') || lowerText.includes('exclude')) {
      return quickExamples.safety;
    }
    if (lowerText.includes('endpoint') || lowerText.includes('outcome')) {
      return quickExamples.endpoints;
    }
    
    // Default suggestions
    return [
      "Based on analysis of 48,912+ real protocols",
      "Add specific age requirements",
      "Include performance status criteria", 
      "Specify laboratory requirements",
      "Consider biomarker requirements"
    ];
  };

  const insertText = (textToInsert: string) => {
    const textarea = document.querySelector('textarea') as HTMLTextAreaElement;
    if (textarea) {
      const start = textarea.selectionStart;
      const end = textarea.selectionEnd;
      const newValue = value.substring(0, start) + textToInsert + value.substring(end);
      onChange(newValue);
      
      // Restore cursor position
      setTimeout(() => {
        textarea.setSelectionRange(start + textToInsert.length, start + textToInsert.length);
        textarea.focus();
      }, 0);
    } else {
      onChange(value + '\n' + textToInsert);
    }
  };

  const smartSuggestions = getSmartSuggestions(value);

  return (
    <div style={{ position: 'relative' }}>
      {/* Smart Toolbar */}
      <div style={{ 
        display: 'flex', 
        gap: '8px', 
        marginBottom: '8px', 
        alignItems: 'center',
        flexWrap: 'wrap' 
      }}>
        <button
          onClick={() => setShowSuggestions(!showSuggestions)}
          style={{
            padding: '6px 12px',
            fontSize: '12px',
            backgroundColor: showSuggestions ? '#e3f2fd' : '#f5f5f5',
            border: '1px solid #ddd',
            borderRadius: '4px',
            cursor: 'pointer'
          }}
        >
          üí° Smart Suggestions
        </button>

        <button
          onClick={() => insertText("‚Ä¢ ")}
          style={{
            padding: '6px 12px',
            fontSize: '12px',
            backgroundColor: '#f5f5f5',
            border: '1px solid #ddd',
            borderRadius: '4px',
            cursor: 'pointer'
          }}
        >
          üìñ Add Bullet
        </button>

        <button
          onClick={() => insertText("1. ")}
          style={{
            padding: '6px 12px',
            fontSize: '12px',
            backgroundColor: '#f5f5f5',
            border: '1px solid #ddd',
            borderRadius: '4px',
            cursor: 'pointer'
          }}
        >
          üìù Add Number
        </button>

        <span style={{ color: '#666', marginLeft: 'auto', fontSize: '11px' }}>
          Based on 48,912+ real protocols
        </span>
      </div>

      {/* Suggestions Panel */}
      {showSuggestions && (
        <div style={{
          backgroundColor: '#fff',
          border: '1px solid #ddd',
          borderRadius: '6px',
          padding: '12px',
          marginBottom: '8px',
          maxHeight: '300px',
          overflowY: 'auto'
        }}>
          <div style={{ fontWeight: 'bold', marginBottom: '8px', fontSize: '13px' }}>
            Context-Aware Suggestions
          </div>
          <div style={{ display: 'grid', gap: '4px' }}>
            {smartSuggestions.map((suggestion, index) => (
              <div key={index} style={{ 
                display: 'flex', 
                justifyContent: 'space-between', 
                alignItems: 'center',
                padding: '6px 8px',
                backgroundColor: '#f8f9fa',
                borderRadius: '4px',
                fontSize: '12px'
              }}>
                <span>{suggestion}</span>
                {index < 5 && (
                  <button
                    onClick={() => insertText(suggestion)}
                    style={{
                      padding: '2px 6px',
                      fontSize: '10px',
                      backgroundColor: '#007bff',
                      color: 'white',
                      border: 'none',
                      borderRadius: '3px',
                      cursor: 'pointer'
                    }}
                  >
                    + Add
                  </button>
                )}
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Main Text Area */}
      <textarea
        value={value}
        onChange={(e) => onChange(e.target.value)}
        placeholder={placeholder}
        rows={8}
        style={{ 
          width: '100%', 
          marginBottom: '8px',
          padding: '12px',
          fontSize: '14px',
          border: '1px solid #ddd',
          borderRadius: '4px',
          resize: 'vertical',
          fontFamily: 'inherit'
        }}
        onSelect={(e) => {
          const target = e.target as HTMLTextAreaElement;
          setCursorPosition(target.selectionStart);
        }}
      />

      {/* Stats Bar */}
      <div style={{ 
        display: 'flex', 
        justifyContent: 'space-between', 
        alignItems: 'center', 
        fontSize: '11px', 
        color: '#666',
        marginTop: '4px'
      }}>
        <span>
          {value.length} characters ‚Ä¢ {value.split('\n').filter(line => line.trim()).length} lines
        </span>
        <span>
          Position: {cursorPosition}
        </span>
      </div>

      {/* Quick Insert Buttons */}
      {value.length < 50 && (
        <div style={{ 
          marginTop: '12px', 
          padding: '12px',
          backgroundColor: '#f8f9fa',
          border: '1px solid #ddd',
          borderRadius: '6px'
        }}>
          <div style={{ marginBottom: '8px', fontWeight: 'bold', fontSize: '13px' }}>
            Quick Start - Common Protocol Sections
          </div>
          <div style={{ display: 'flex', gap: '6px', flexWrap: 'wrap' }}>
            <button
              onClick={() => insertText("Inclusion Criteria:\n1. ")}
              style={{
                padding: '6px 12px',
                fontSize: '11px',
                backgroundColor: 'white',
                border: '1px solid #007bff',
                color: '#007bff',
                borderRadius: '4px',
                cursor: 'pointer'
              }}
            >
              Inclusion Criteria
            </button>
            <button
              onClick={() => insertText("Exclusion Criteria:\n1. ")}
              style={{
                padding: '6px 12px',
                fontSize: '11px',
                backgroundColor: 'white',
                border: '1px solid #007bff',
                color: '#007bff',
                borderRadius: '4px',
                cursor: 'pointer'
              }}
            >
              Exclusion Criteria
            </button>
            <button
              onClick={() => insertText("Primary Endpoint:\n‚Ä¢ ")}
              style={{
                padding: '6px 12px',
                fontSize: '11px',
                backgroundColor: 'white',
                border: '1px solid #007bff',
                color: '#007bff',
                borderRadius: '4px',
                cursor: 'pointer'
              }}
            >
              Primary Endpoint
            </button>
            <button
              onClick={() => insertText("Secondary Endpoints:\n‚Ä¢ ")}
              style={{
                padding: '6px 12px',
                fontSize: '11px',
                backgroundColor: 'white',
                border: '1px solid #007bff',
                color: '#007bff',
                borderRadius: '4px',
                cursor: 'pointer'
              }}
            >
              Secondary Endpoints
            </button>
          </div>
        </div>
      )}
    </div>
  );
};